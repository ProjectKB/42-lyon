TODO


-a b64 decode/encode according to encrypt/decrypt mode S OK
-e encrypt (default) S OK
-d decrypt S OK
-P print S OK


-o output A OK
-i input A OK


-k Key Hex A OK
-v IV hex A OK
-s Salt hex A OK
-p password A


Check alloc
Check flag when decrypt ('cause we modify flag for b64)
Secure ft_random
What is happening when pass + key
Pas d'IV when CBC -> ERROR

Salted__                    -> When EVP_BytesToKey add 'Salted__' + 'salt'
53 61 6c 74 65 64 5f 5f     ->

salt=D03FC1E8D97F0000
key=98F437EE43AC0712
iv =EFC65FA6949D38D4

echo "0123" | openssl des-ecb -pass "pass:MySuperSecurePassword" -S D03FC1E8D97F0000
echo "0123" | openssl des-ecb -K 98F437EE43AC0712

Ascii 1:
Salted__�?����
              f�E�% 

Ascii 2: 
�
 f�E�%

Hex 1: U2FsdGVkX1/QP8Ho2X8AAKoLZAhmskXc
Hex 2: qgtkCGayRdw=

U2FsdGVkX1/QP8Ho2X8AAKoLZAhmskXc

U2FsdGVkX1/QP8Ho2X8AAK

S  a  l  t  e  d  _  _
U2Fs dGVk X1/
53 61 6c 74 65 64 5f 5f 

D0 3F 41 AE F0 7F 00 00
QP8H o2X8 AAK
d0 3f c1 e8 d9 7f 00 00

-K -> decrypt -> pas de condition

-pass -> input contient Salted__X -> on récupère le Salt à partir de l'input et on déduit le clef par ce biais
0. (-a: decode)
1. calcul key with 8->16 bytes of input 
2. remove 16 first bytes
3. process